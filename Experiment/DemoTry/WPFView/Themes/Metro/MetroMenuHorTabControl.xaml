<!--横向标签页，继承自TabControl-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Metro="clr-namespace:Arthas.Controls.Metro">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Arthas;component/Themes/Metro/MetroBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Metro:MetroMenuHorTabControl}">
        <!--横向布局-->
        <Setter Property="TabStripPlacement" Value="Top"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="SelectedIndex" Value="0"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Metro:MetroMenuHorTabControl}">

                    <Grid Background="#00000000" KeyboardNavigation.TabNavigation="Local">
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="column1" Width="Auto"/>
                            <ColumnDefinition x:Name="column2"/>
                        </Grid.ColumnDefinitions>
                        
                        <!--动画属性-->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="SelectionStart"/>
                                <VisualState x:Name="SelectionEnd">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(Margin)" To="30,0,-30,0" Duration="0:0:0"/>
                                        <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="0:0:0.0"/>
                                        <ThicknessAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(Margin)" To="0" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectionEndIconMode">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(Margin)" To="30,0,-30,0" Duration="0:0:0"/>
                                        <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="0:0:0.0"/>
                                        <ThicknessAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(Margin)" To="0" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectionLoaded">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(Margin)" To="0" Duration="0:0:0"/>
                                        <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectionLoadedIconMode">
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(Margin)" To="0" Duration="0:0:0"/>
                                        <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0"/>

                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SelectionStartIconMode">
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <Rectangle Fill="#FFF0F0F0" Grid.RowSpan="2" Opacity="0.06"/>
                        <Metro:MetroFocusButton BorderThickness="0" MouseMoveBorderThickness="0" Command="Metro:MetroMenuTabControl.IconModeClickCommand"/>

                        <!--控件布局-->
                        <Grid x:Name="tab" Width="{TemplateBinding ActualWidth}" Height="{Binding ActualHeight,ElementName=tabWidth}"  Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Background="{TemplateBinding BorderBrush}" VerticalAlignment="Top" HorizontalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Rectangle Fill="#FFF0F0F0" Grid.RowSpan="2" Opacity="0.06"/>
                            <Metro:MetroFocusButton BorderThickness="0" MouseMoveBorderThickness="0" Command="Metro:MetroMenuTabControl.IconModeClickCommand"/>

                            <Metro:MetroScrollViewer Margin="50,0,0,0"  BorderBrush="White" VerticalAlignment="Center" Grid.RowSpan="1" Grid.Row="1" >
                                <Canvas x:Name="canvas" Height="{Binding ActualHeight,ElementName=tabWidth}">
                                    <Grid x:Name="tabWidth">
                                        <TabPanel x:Name="headerPanel" IsItemsHost="true"/>
                                    </Grid>
                                </Canvas>
                            </Metro:MetroScrollViewer>
                        </Grid>

                        <!--下方选项卡-->
                        <Border x:Name="contentPanel" >
                            <ContentPresenter x:Name="content" ContentSource="SelectedContent" />
                        </Border>

                    </Grid>
                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>